version: "3.8"

networks:
  simplytodoapp:
    driver: bridge

services:
  simplytodo-db:
    container_name: ${SIMPLYTODO_DB}
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    expose:
      - "${MY_SQL_PORT}"
    ports:
      - "${MY_SQL_PORT}:${MY_SQL_PORT}"
    networks:
      - ${SIMPLYTODO_NETWORK}
    environment:
      MYSQL_DATABASE: ${MY_SQL_DATABASE}
      MYSQL_ALLOW_EMPTY_PASSWORD: ${MY_SQL_ALLOW_EMPTY_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MY_SQL_ROOT_PASSWORD}
      MYSQL_USER: ${MY_SQL_USER}
      MYSQL_PASSWORD: ${MY_SQL_PASSWORD}
      MYSQL_ROOT_HOST: ${MY_SQL_ROOT_HOST}
    volumes:
      - mysql-data:/data/db
      - "./simplytodo-api/db/config.db.sql:/docker-entrypoint-initdb.d/config.db.sql"
  simplytodo:
    container_name: ${SIMPLYTODO}
    image: ${SIMPLYTODO}
    build:
      context: ./simplytodo-front
      dockerfile: Dockerfile
    ports:
      - "${SIMPLYTODO_PORT}:${SIMPLYTODO_PORT}"
    networks:
      - ${SIMPLYTODO_NETWORK}
  simplytodo-api:
    container_name: ${SIMPLYTODO_API}
    depends_on:
      - ${SIMPLYTODO_DB}
    image: ${SIMPLYTODO_API}
    build:
      context: ./simplytodo-api
      dockerfile: Dockerfile
    restart: always
    command: bash -c 'while !</dev/tcp/simplytodo-db/${MY_SQL_PORT}; do sleep 1; done; npm start'
    ports:
      - "${SIMPLYTODO_API_PORT}:${SIMPLYTODO_API_PORT}"
    networks:
      - ${SIMPLYTODO_NETWORK}
  nginx-rp-gateway:
    container_name: nginx-rp-gateway
    hostname: nginx-rp-gateway
    image: nginx:1.20-alpine
    depends_on:
      -  simplytodo
      -  simplytodo-api
    ports:
      - 80:80
      - 443:443
    networks:
      - simplytodoapp
    volumes:
      - ./conf/:/etc/nginx/conf.d/
      - ./html:/var/www/dramane.dev/nginx-reverse-proxy-gateway/html
      - /etc/letsencrypt:/etc/letsencrypt 
volumes:
  mysql-data:
    driver: local